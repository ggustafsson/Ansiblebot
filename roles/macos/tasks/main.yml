- name: Create misc directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0700"
  loop:
    - "{{ path_home }}/Applications"
    - "{{ path_home }}/Library/CloudStorage/Dropbox"
    - "{{ path_home }}/Library/CloudStorage/Dropbox/Split-Brain"
    - "{{ path_home }}/Library/CloudStorage/Dropbox/Split-Brain/Text"
    - "{{ path_home }}/Storage"

- name: Git clone/pull misc projects
  ansible.builtin.git:
    repo: "{{ item.url }}"
    dest: "{{ item.name }}"
  loop:
    - name: "{{ path_projects }}/Dockerfiles"
      url: "{{ git_dockerfiles }}"
    - name: "{{ path_projects }}/Project-Assets"
      url: "{{ git_projectassets }}"

- name: Create misc symbolic links
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop:
    - src: "{{ path_dotfiles }}/gnupg/gpg-agent.conf"
      dest: "{{ path_home }}/.gnupg/gpg-agent.conf"
    - src: "{{ path_home }}/Library/CloudStorage/Dropbox/Split-Brain/Text"
      dest: "{{ path_home }}/Documents/Text"

- name: Delete misc files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ path_home }}/Desktop/.localized"
    - "{{ path_home }}/Documents/.localized"
    - "{{ path_home }}/Downloads/.localized"
    - "{{ path_home }}/Library/.localized"
    - "{{ path_home }}/Movies/.localized"
    - "{{ path_home }}/Music/.localized"
    - "{{ path_home }}/Pictures/.localized"
    - "{{ path_home }}/Public/.localized"
    - "{{ path_home }}/Sites/.localized"

- name: Create file /etc/sudoers.d/custom
  ansible.builtin.template:
    src: sudoers.d/custom.j2
    dest: /etc/sudoers.d/custom
    owner: root
    group: wheel
    mode: "0640"
  become: true


- name: Create directory {{ path_brew }}
  ansible.builtin.file:
    path: "{{ path_brew }}"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: "0755"
  become: true

- name: Git clone/pull Homebrew repos
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
    update: false # Let Homebrew handle updates.
  loop:
    - repo: https://github.com/Homebrew/brew.git
      dest: "{{ path_brew }}"
    - repo: https://github.com/Homebrew/homebrew-core
      dest: "{{ path_brew }}/Library/Taps/homebrew/homebrew-core"
    - repo: https://github.com/Homebrew/homebrew-cask
      dest: "{{ path_brew }}/Library/Taps/homebrew/homebrew-cask"

- name: Upgrade all Homebrew packages
  community.general.homebrew:
    update_homebrew: true
    upgrade_all: true

- name: Install Homebrew packages from list 'brew_macos'
  community.general.homebrew:
    name: "{{ brew_macos }}"
    state: latest
    force_formula: true
  when: brew_macos is defined

- name: Install Homebrew applications from list 'cask_macos'
  community.general.homebrew_cask:
    name: "{{ cask_macos }}"
    state: latest
    install_options: appdir=~/Applications
  when: cask_macos is defined

- name: Install Homebrew applications from list 'cask_macos_root'
  community.general.homebrew_cask:
    name: "{{ cask_macos_root }}"
    state: latest
    install_options: appdir=/Applications
  when: cask_macos_root is defined

- name: Install Go packages from list 'go_macos'
  ansible.builtin.shell:
    # Custom GOPATH is needed when bootstraping (pre ~/.zshenv population).
    cmd: GOPATH={{ path_golang | quote }} go install {{ item | quote }}
  loop: "{{ go_macos }}"
  when: go_macos is defined
  changed_when: false

- name: Install Pip packages from list 'pip_macos'
  ansible.builtin.pip:
    name: "{{ pip_macos }}"
    state: latest
    executable: "{{ pip_exec }}"
    extra_args: "{{ pip_args }}"
  when: pip_macos is defined


- name: Create misc directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0700"
  loop:
    - "{{ path_home }}/.docker/cli-plugins"
    - "{{ path_home }}/Library/Application Support/Code"
    - "{{ path_home }}/Library/Application Support/Code/User"

- name: Create misc symbolic links
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop:
    - src: /opt/homebrew/opt/docker-compose/bin/docker-compose
      dest: "{{ path_home }}/.docker/cli-plugins/docker-compose"
    - src: "{{ path_dotfiles }}/hammerspoon"
      dest: "{{ path_home }}/.hammerspoon"
    - src: "{{ path_brew }}/opt/fzf"
      dest: "{{ path_home }}/.local/share/fzf"
    - src: "{{ path_brew }}/opt/zsh-autosuggestions/share/zsh-autosuggestions"
      dest: "{{ path_home }}/.local/share/zsh-autosuggestions"
    - src: "{{ path_dotfiles }}/vscode/keybindings.json"
      dest: "{{ path_home }}/Library/Application Support/Code/User/keybindings.json"
    - src: "{{ path_dotfiles }}/vscode/settings.json"
      dest: "{{ path_home }}/Library/Application Support/Code/User/settings.json"

- name: Add {{ path_brew }}/bin/zsh to /etc/shells
  ansible.builtin.lineinfile:
    path: /etc/shells
    line: "{{ path_brew }}/bin/zsh"
  become: true


- name: Execute misc 'defaults' commands
  ansible.builtin.command:
    cmd: "{{ item }}"
  loop:
    - defaults write com.microsoft.VSCode ApplePressAndHoldEnabled -bool false

    # Dock
    - defaults write com.apple.Dock appswitcher-all-displays -bool true
    - defaults write com.apple.Dock mru-spaces -bool false
    - defaults write com.apple.Dock showAppExposeGestureEnabled -bool true
    - defaults write com.apple.Dock tilesize -int 48

    # Finder
    - defaults write NSGlobalDomain AppleShowAllExtensions -bool true
    - defaults write com.apple.finder DownloadsFolderListViewSettingsVersion -bool true
    - defaults write com.apple.finder FXDefaultSearchScope -string SCcf
    - defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
    - defaults write com.apple.finder FXEnableRemoveFromICloudDriveWarning -bool false
    - defaults write com.apple.finder FXPreferredViewStyle -string clmv
    - defaults write com.apple.finder FXRemoveOldTrashItems -bool true
    - defaults write com.apple.finder NewWindowTarget -string PfHm
    - defaults write com.apple.finder ShowRecentTags -bool false
    - defaults write com.apple.finder WarnOnEmptyTrash -bool false

    # Keyboard
    - defaults write NSGlobalDomain AppleKeyboardUIMode -int 2
    - defaults write NSGlobalDomain InitialKeyRepeat -int 15
    - defaults write NSGlobalDomain KeyRepeat -int 2
    - defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false
    - defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false
    - defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false
    - defaults write NSGlobalDomain WebAutomaticSpellingCorrectionEnabled -bool false
  changed_when: false

- name: Check desktop wallpaper
  ansible.builtin.command:
    cmd: sqlite3 ~/Library/Application\ Support/Dock/desktoppicture.db "SELECT value FROM data ORDER BY ROWID DESC LIMIT 1"
  register: dock_wallpaper
  changed_when: false

# FIXME: Make this work for macOS Sonoma.
# - name: Set desktop wallpaper
#   ansible.builtin.command:
#     cmd: sqlite3 ~/Library/Application\ Support/Dock/desktoppicture.db "{{ item }}"
#   loop:
#     - DELETE FROM data
#     - DELETE FROM pictures
#     - DELETE FROM preferences
#     - "INSERT INTO data (value) VALUES ('{{ path_wallpaper }}')"
#     - INSERT INTO preferences (key, data_id, picture_id) VALUES (1, 1, 1)
#   notify: Restart Dock
#   when: path_wallpaper not in dock_wallpaper.stdout
#   changed_when: true


- name: Check installed Visual Studio Code extensions
  ansible.builtin.command:
    cmd: code --list-extensions
  register: code_extensions
  changed_when: false

- name: Install Visual Studio Code extensions
  ansible.builtin.command:
    cmd: code --install-extension "{{ item }}"
  loop:
    - asvetliakov.vscode-neovim
    - bierner.markdown-mermaid
    - golang.go
    - jebbs.plantuml
    - ms-azuretools.vscode-docker
    - ms-python.flake8
    - ms-python.pylint
    - ms-python.python
    - ms-vscode-remote.remote-containers
    - ms-vscode-remote.remote-ssh
    - ms-vscode-remote.remote-ssh-edit
    - redhat.ansible
    - redhat.vscode-yaml
    - rust-lang.rust-analyzer
  when: item not in code_extensions.stdout
  changed_when: true


- name: Create misc nnn bookmarks
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ path_nnn_bms }}/{{ item.dest }}"
    state: link
    force: true
  loop:
    - src: "{{ path_home }}/Library/CloudStorage/Dropbox/Split-Brain"
      dest: Dropbox - Split-Brain
    - src: "{{ path_projects }}/Ansiblebot"
      dest: Projects - Ansiblebot
