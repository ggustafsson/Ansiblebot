- name: Install Homebrew packages from list 'brew_macos_home'
  community.general.homebrew:
    name: "{{ brew_macos_home }}"
    state: latest
    force_formula: true
  when: brew_macos_home is defined

- name: Install Homebrew applications from list 'cask_macos_home'
  community.general.homebrew_cask:
    name: "{{ cask_macos_home }}"
    state: latest
    install_options: appdir=~/Applications
  when: cask_macos_home is defined

- name: Install Homebrew applications from list 'cask_macos_home_root'
  community.general.homebrew_cask:
    name: "{{ cask_macos_home_root }}"
    state: latest
    install_options: appdir=/Applications
  when: cask_macos_home_root is defined

- name: Install Go packages from list 'go_macos_home'
  ansible.builtin.shell:
    # Custom GOPATH is needed when bootstraping (pre ~/.zshenv population).
    cmd: GOPATH={{ path_golang | quote }} go install {{ item | quote }}
  loop: "{{ go_macos_home }}"
  when: go_macos_home is defined
  changed_when: false

- name: Install Pip packages from list 'pip_macos_home'
  ansible.builtin.pip:
    name: "{{ pip_macos_home }}"
    state: latest
    executable: "{{ pip_exec }}"
    extra_args: "{{ pip_args }}"
  when: pip_macos_home is defined


- name: Create misc directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0700"
  loop:
    - "{{ path_home }}/Library/CloudStorage/Dropbox/Reading"

- name: Create misc symbolic links
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop:
    - src: "{{ path_home }}/Library/CloudStorage/Dropbox/Reading"
      dest: "{{ path_home }}/Documents/Reading"


- name: Create misc nnn bookmarks
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ path_nnn_bms }}/{{ item.dest }}"
    state: link
    force: true
  loop:
    - src: /Volumes/External 1
      dest: Volumes - External 1
    - src: /Volumes/External 2
      dest: Volumes - External 2
    - src: /Volumes/Keychain 1
      dest: Volumes - Keychain 1
    - src: /Volumes/Keychain 2
      dest: Volumes - Keychain 2
